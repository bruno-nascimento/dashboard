package br.com.bsitecnologia.dashboard.model;

// Generated 15/09/2012 10:17:48 by Hibernate Tools 3.4.0.CR1

import static javax.persistence.GenerationType.IDENTITY;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import br.com.bsitecnologia.dashboard.util.BaseEntity;

/**
 * ColaboradorProjeto generated by hbm2java
 */
@Entity
@Table(name = "ColaboradorProjeto", catalog = "dashboard")
public class ColaboradorProjeto implements Serializable, BaseEntity {
	
	private static final long serialVersionUID = 309778551406872589L;

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	private Integer id;
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "projeto", nullable = false)
	private Projeto projeto;
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "colaborador", nullable = false)
	private Colaborador colaborador;
	
	@Column(name = "cargaHoraria")
	private Integer cargaHoraria;
	
	@Temporal(TemporalType.DATE)
	@Column(name = "dataInicio", length = 10)
	private Date dataInicio;
	
	@Temporal(TemporalType.DATE)
	@Column(name = "dataFim", length = 10)
	private Date dataFim;
	
	@Column
	private Integer quantidadeHoras;
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "colaboradorAtualizacao")
	private List<Artefato> artefatosAtualizados = new ArrayList<Artefato>(0);
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "colaboradorCriacao")
	private List<Artefato> artefatosCriados = new ArrayList<Artefato>(0);


	public ColaboradorProjeto() {
	}

	public ColaboradorProjeto(Projeto projeto, Colaborador colaborador) {
		this.projeto = projeto;
		this.colaborador = colaborador;
	}
	
	public ColaboradorProjeto(Integer id, Projeto projeto,
			Colaborador colaborador, Integer cargaHoraria, Date dataInicio,
			Date dataFim, Integer quantidadeHoras,
			List<Artefato> artefatosAtualizados, List<Artefato> artefatosCriados) {
		super();
		this.id = id;
		this.projeto = projeto;
		this.colaborador = colaborador;
		this.cargaHoraria = cargaHoraria;
		this.dataInicio = dataInicio;
		this.dataFim = dataFim;
		this.quantidadeHoras = quantidadeHoras;
		this.artefatosAtualizados = artefatosAtualizados;
		this.artefatosCriados = artefatosCriados;
	}

	public Integer getId() {
		return id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	public Projeto getProjeto() {
		return projeto;
	}

	public void setProjeto(Projeto projeto) {
		this.projeto = projeto;
	}

	public Colaborador getColaborador() {
		return colaborador;
	}

	public void setColaborador(Colaborador colaborador) {
		this.colaborador = colaborador;
	}

	public Integer getCargaHoraria() {
		return cargaHoraria;
	}

	public void setCargaHoraria(Integer cargaHoraria) {
		this.cargaHoraria = cargaHoraria;
	}

	public Date getDataInicio() {
		return dataInicio;
	}

	public void setDataInicio(Date dataInicio) {
		this.dataInicio = dataInicio;
	}

	public Date getDataFim() {
		return dataFim;
	}

	public void setDataFim(Date dataFim) {
		this.dataFim = dataFim;
	}

	public Integer getQuantidadeHoras() {
		return quantidadeHoras;
	}

	public void setQuantidadeHoras(Integer quantidadeHoras) {
		this.quantidadeHoras = quantidadeHoras;
	}

	public List<Artefato> getArtefatosAtualizados() {
		return artefatosAtualizados;
	}

	public void setArtefatosAtualizados(List<Artefato> artefatosAtualizados) {
		this.artefatosAtualizados = artefatosAtualizados;
	}

	public List<Artefato> getArtefatosCriados() {
		return artefatosCriados;
	}

	public void setArtefatosCriados(List<Artefato> artefatosCriados) {
		this.artefatosCriados = artefatosCriados;
	}

	@Override
	public String getEntityDescription() {
		return String.format("%s - %s", colaborador.getNome(), projeto.getNome());
	}
	
}
