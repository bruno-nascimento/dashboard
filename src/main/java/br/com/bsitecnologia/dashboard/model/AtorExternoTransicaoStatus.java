package br.com.bsitecnologia.dashboard.model;

// Generated 15/09/2012 10:17:48 by Hibernate Tools 3.4.0.CR1

import static javax.persistence.GenerationType.IDENTITY;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import br.com.bsitecnologia.dashboard.util.BaseEntity;

/**
 * AtorExternoTransicaoStatus generated by hbm2java
 */
@Entity
@Table(name = "AtorExternoTransicaoStatus", catalog = "dashboard")
public class AtorExternoTransicaoStatus implements Serializable, BaseEntity {

	private static final long serialVersionUID = -8401824379434401340L;

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	private Integer id;
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "atorExterno", nullable = false)
	private AtorExterno atorExterno;
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "projeto", nullable = false)
	private Projeto projeto;
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "transicaoStatus", nullable = false)
	private TransicaoStatus transicaoStatus;
	
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "dataInicio", nullable = false, length = 19)
	private Date dataInicio;
	
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "dataFim", length = 19)
	private Date dataFim;
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "atorExternoTransicaoStatus")
	private List<HistoricoProjeto> historicoProjetos = new ArrayList<HistoricoProjeto>(0);

	public AtorExternoTransicaoStatus() {
	}

	public AtorExternoTransicaoStatus(AtorExterno atorExterno, Projeto projeto,
			TransicaoStatus transicaoStatus, Date dataInicio) {
		this.atorExterno = atorExterno;
		this.projeto = projeto;
		this.transicaoStatus = transicaoStatus;
		this.dataInicio = dataInicio;
	}

	public AtorExternoTransicaoStatus(AtorExterno atorExterno, Projeto projeto,
			TransicaoStatus transicaoStatus, Date dataInicio, Date dataFim,
			List<HistoricoProjeto> historicoProjetos) {
		this.atorExterno = atorExterno;
		this.projeto = projeto;
		this.transicaoStatus = transicaoStatus;
		this.dataInicio = dataInicio;
		this.dataFim = dataFim;
		this.historicoProjetos = historicoProjetos;
	}

	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	public AtorExterno getAtorExterno() {
		return this.atorExterno;
	}

	public void setAtorExterno(AtorExterno atorExterno) {
		this.atorExterno = atorExterno;
	}

	public Projeto getProjeto() {
		return this.projeto;
	}

	public void setProjeto(Projeto projeto) {
		this.projeto = projeto;
	}

	public TransicaoStatus getTransicaoStatus() {
		return this.transicaoStatus;
	}

	public void setTransicaoStatus(TransicaoStatus transicaoStatus) {
		this.transicaoStatus = transicaoStatus;
	}

	public Date getDataInicio() {
		return this.dataInicio;
	}

	public void setDataInicio(Date dataInicio) {
		this.dataInicio = dataInicio;
	}

	public Date getDataFim() {
		return this.dataFim;
	}

	public void setDataFim(Date dataFim) {
		this.dataFim = dataFim;
	}

	public List<HistoricoProjeto> getHistoricoProjetos() {
		return this.historicoProjetos;
	}

	public void setHistoricoProjetos(List<HistoricoProjeto> historicoProjetos) {
		this.historicoProjetos = historicoProjetos;
	}

	@Override
	public String getEntityDescription() {
		return String.format("%s - %s", atorExterno.getNome(), transicaoStatus.getNome());
	}

}
