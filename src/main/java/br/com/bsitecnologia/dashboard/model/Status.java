package br.com.bsitecnologia.dashboard.model;

// Generated 15/09/2012 10:17:48 by Hibernate Tools 3.4.0.CR1

import static javax.persistence.GenerationType.IDENTITY;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

import br.com.bsitecnologia.dashboard.util.BaseEntity;

/**
 * Status generated by hbm2java
 */
@Entity
@Table(name = "Status", catalog = "dashboard", uniqueConstraints = @UniqueConstraint(columnNames = "nome"))
public class Status implements Serializable, BaseEntity {
	
	private static final long serialVersionUID = -6053037786288407073L;

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	private Integer id;
	
	@Column(name = "nome", unique = true, nullable = false, length = 45)
	private String nome;
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "status")
	private List<Alerta> alertas = new ArrayList<Alerta>(0);
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "statusTo")
	private List<TransicaoStatus> transicaoStatusesForStatusTo = new ArrayList<TransicaoStatus>(0);
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "status")
	private List<Projeto> projetos = new ArrayList<Projeto>(0);
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "statusFrom")
	private List<TransicaoStatus> transicaoStatusesForStatusFrom = new ArrayList<TransicaoStatus>(0);

	public Status() {
	}

	public Status(String nome) {
		this.nome = nome;
	}

	public Status(String nome, List<Alerta> alertas,
			List<TransicaoStatus> transicaoStatusesForStatusTo,
			List<Projeto> projetos,
			List<TransicaoStatus> transicaoStatusesForStatusFrom) {
		this.nome = nome;
		this.alertas = alertas;
		this.transicaoStatusesForStatusTo = transicaoStatusesForStatusTo;
		this.projetos = projetos;
		this.transicaoStatusesForStatusFrom = transicaoStatusesForStatusFrom;
	}

	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	public String getNome() {
		return this.nome;
	}

	public void setNome(String nome) {
		this.nome = nome;
	}

	public List<Alerta> getAlertas() {
		return this.alertas;
	}

	public void setAlertas(List<Alerta> alertas) {
		this.alertas = alertas;
	}

	public List<TransicaoStatus> getTransicaoStatusesForStatusTo() {
		return this.transicaoStatusesForStatusTo;
	}

	public void setTransicaoStatusesForStatusTo(List<TransicaoStatus> transicaoStatusesForStatusTo) {
		this.transicaoStatusesForStatusTo = transicaoStatusesForStatusTo;
	}

	public List<Projeto> getProjetos() {
		return this.projetos;
	}

	public void setProjetos(List<Projeto> projetos) {
		this.projetos = projetos;
	}

	public List<TransicaoStatus> getTransicaoStatusesForStatusFrom() {
		return this.transicaoStatusesForStatusFrom;
	}

	public void setTransicaoStatusesForStatusFrom(List<TransicaoStatus> transicaoStatusesForStatusFrom) {
		this.transicaoStatusesForStatusFrom = transicaoStatusesForStatusFrom;
	}

	@Override
	public String getEntityDescription() {
		return nome;
	}

}
